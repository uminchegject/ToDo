■Portfolio
●CityMaker
・街の生成ツールを実装することを目標に現在実装中の作品です。

●作業の流れ
・生成する建物の形態情報とUE4側で配置するAsset情報をDataTableに登録
・DataTableをHoudini側にImport
・形態情報からHoudini側で建物の形態を計算
・建築の形態からAssetの配置位置にPointを生成してPointAttributeにAsset情報を持たせる
・Assetの配置情報をUE側にImportしてUE上でプロシージャルに街生成を行うことができる

●メリット
・形態生成からアセット情報まで非破壊的に調整できるため、パラメーターとなるDataTableで簡単に全体に対するデザインの調整が可能
・建物の形態情報及びアセット周りの情報パラメーターによる柔軟な街並みの生成
・パラメーターで建物の高さ大きさなどを簡単に調整でき、街並みの検証を簡単に行うことができる
・形態情報とアセット情報を切り分けて実装しているため、背景のモックアップとモックアップに対するアセット配置検証の作業工程を、明確に分けて行うことができる

●検証をしながら全体像を決めていくことができる

●同じ形態情報パラメーターを流用しつつ、アセット情報情報パラメーターを差し替えることができる

●アセットの割合や建築形態の検証を柔軟に行いながらデザインを行える


[業務]
■Study + 調査
○転がる柱の実装に必要な情報を調査


■拡張実装
○智人の追従モードと徘徊モードの実装


■基礎実装
○トリガーに接触すると柱が倒れて転がってくる
 -移動周りの実装
 -ガード及び破壊の実装

 -トリガーに接触すると柱が倒れてくる、
 -倒れた柱はプレイヤーのほうに転がる（坂道を転がる）
 -倒れるときにエフェクト、効果音、カメラが振動が発生する
 -転がってくるスピードを調整できる
 -ヒットしてしまった場合は分離+ダメージを受ける
 -ガードもしくは攻撃で破壊できる


▲SoulCity
○SurfaceMakerParameterにパラメーターを加えて、修正も行う

float top3DEdgeSideSize = point(1, "Top3DEdgeSideSize", paramIndex);
float bottom3DEdgeSideSize = point(1, "Bottom3DEdgeSideSize", paramIndex);
 
vector scale =  v@scale;
scale.x -= depthSize * 2;
scale.y -= depthSize * 2;
scale.z = topEdgeSize;
 
vector scaleTopEdge = v@scale;
scaleTopEdge.x = scale.z - top3DEdgeSideSize * 2;
scaleTopEdge.y = topEdgeSize;
scaleTopEdge.z = depthSize;

vector scale3DTopEdge = top3DEdgeSideSize;
scale3DTopEdge.y = topEdgeSize;

if(0.0 < sideEdgeSize)
if(0.0 < top3DEdgeSideSize)
if(0.0 < bottom3DEdgeSideSize)


○BaseAssetの検証
・Type2の検証
・Patternの検証

○DetailAssetの検証
・Patternの検証
・Greebleの検証


■BLOG
Attributeについての説明
