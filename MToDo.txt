[反省]
※教えてもらう際は必ずメモを取り、終わった後にメモをまとめる時間を用意する
※明確なタスクを常に持っておく
※休日は明確なタスクが存在するとき以外は極力外にいる
 -休日はなるべく早くタスクを明確化することを心掛ける


[Studied]
●CQE
Create フラグはコマンドの作成モードで表示できます	 
Quary フラグはコマンドの照会モードで表示できます
Edit フラグはコマンドの編集モードで表示できます

●コーディング規約
・モジュール宣言位置に気を付ける
・キャメルケース(hogehogePyear)
・ログを必ず表示する(mel.eval('print("ここに表示する")'))

●コーディング
・assemblies : 最上位レベルのトランスフォーム DAG オブジェクトがリスト
・long : フルパス名を返す('|group1|pCylinder1')
・list() : リストの編集
・\はコメント内にコメントをする際などに用いる
 -''の中に""を入れる

 
[TA準備]
○CoyoteLancher研修
https://www.vps.coyote-tec.com/63d23a88800581e6744a6971


[IZON.]
○TimeLine不具合調査
・AlongCurveが 1 / 2になってしまう原因を調査
・Timelineの最後が0になってしまう原因を調査 


[USD]
○一度サンプルで挙動確認を行って挙動の流れを確認する

・USDの基礎
https://www.youtube.com/watch?v=4kMBwpdwkkw
https://qiita.com/ousttrue/items/b5f34e0f2441ca74467e
https://www.slideshare.net/slideshow/usd-79288174/79288174#2
https://fereria.github.io/reincarnation_tech/usd/what_is_usd

・USDの運用
https://fereria.github.io/reincarnation_tech/usd/python/tutorials/01
https://qiita.com/ousttrue/items/b5f34e0f2441ca74467e
https://qiita.com/takahito-tejima/items/ee0332bfb5c9baed3b09

・LOPS&Soraris
https://note.com/indyzonecorp/n/ndf9d8f82d7e5#93191dbb-a31d-4dbc-851a-584b7882528b
https://houdinifx.jp/blog/lops%E3%81%AE%E4%BB%95%E7%B5%84%E3%81%BF/

https://www.sidefx.com/tutorials/usd-authoring-with-solaris/
https://www.youtube.com/watch?v=SqTHglDeKtU


[Python]
■ツール課題
※サンプルプロジェクトを探す

●処理
・登録処理
 -登録ボタンを押したら選択しているオブジェクトを登録するように実装
 -登録したらダイアログに表示するように実装

・登録解除処理
 -登録解除するボタンを押したら選択してる登録一覧オブジェクトから登録を外すように実装

・削除処理
 -エラーのダイアログの表示

・GUI資料
https://3d.crdg.jp/tech/archives/218
https://3d.crdg.jp/tech/archives/382
https://3d.crdg.jp/tech/archives/4495
https://3d.crdg.jp/tech/archives/380
https://3d.crdg.jp/tech/archives/1938

https://patrickvfx.blogspot.com/2017/07/maya-ui-layout-example.html
https://gucheng0712.github.io/python/2019/06/01/Creating-UI-in-Maya.html
https://qiita.com/lie_871221/items/1b6ef8faba06e5180cf9



■HardSurfaceModeling
○モデリングTutorialを調べる
・ハードサーフェスモデリングについて検証する
・プロシージャルにサポートできる行程がないかを調べる

○Voronoiをメインに検証を進める
・サンプルコードの研究
 https://puarts.com/?pid=873
 https://www.youtube.com/watch?v=ghD79dVZZ_o
・ツールの実装
 
・拡張

●設計
※Modelingをベースに行い、プロシージャルにサポートするツールを設計する
※クラス設計を意識する
※模様を生成することを意識する


[Modelieng]
※明確なアセットセットを目標に都度新規実装を加えていく

■ModularOldCity
○BoxとColorでGreebleベースの区画生成と、LineMakerを用いた形態の変化を検証する
・BoxBaseParameterを整理する
 -1通りの挙動を確認する
 -Box&Colorの検証環境を整える
・LineBaseParamenterを新規実装する
 -BoxToLine, LineToBoxを実装
 -DivideHeightを実装
 -Lineの検証環境を整理
 -MakeEdgeを実装
 -DividePrimを実装
・InitParameterを整理する

△Detail部分を整理する


■LineMakerの設計
・Attributeに表裏のベクトルを設定しておく

●BoxToLine
PolyLineを生成する
・Parameter
 -DividePrim

●LineToBox
・Boxを生成する
・Parameter
 -EdgeSize
 -DepthSize

●MakeEdge
Edgeの生成,移動
・Parameter
 -Range
 -TransformPoint

●BaseParamenter
・Parameter
 -Transform
 -Scale
 -Rotate 
 
●DivideHeight
・Parameter
 -IsPattern
 -IsRandom 
 -HeightValue
 
▲DividePrim
・


■IDEA
●InitParameterを用いた柔軟なPDの設計
 -Scale
 -Seed

●Noise周りの設計
・NoiseParameterの追加
 -AttributeにNoiseを持たせて
 
 -Boxサイズに偏りを持たせる
 -Typeに偏りを持たせる
