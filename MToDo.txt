[Study]
○多重継承と仮想基本クラス
http://marupeke296.com/CPP_No8_MultiClass.html

○ギミックの中で気になるアイテムの中の処理を確認する


○AI
https://tech.spark-creative.co.jp/entry/2022/12/02/123633

○ActionRPG
・AI周り


[業務]
○破壊周りの対応
・破壊のマスタークラスを実装して継承したクラスで破壊オブジェクトを設定するように対応

○ダメージ周りの対応
・Thibitoの修正を行い説明する


■拡張実装
○Gimmickクラスの設計を提案
・クラスの説明
・それぞれギミックの根本部分の整理

○智人AIの実装
・智人の追従モードと徘徊モードの実装
 -徘徊モードの仕様設計と実装方法の整理


■基礎実装
※ギミックの根本の部分を整理して、共通した意図・仕様のギミックを複数用意

■基底クラス
・マスタークラスを実装する
 -継承したクラスでコンポーネントを設定するようにする
・インターフェースでTriggerEventをつなげる
・パラメーターで難易度を変えられるように修正する

●BP_DestoryObjGimmick
BP_DestroyObj_Baseを継承
・破壊条件を設定する

●BP_StaticObjGimmick
BP_Destroy_Baseを継承

●BP_TriggerBase

■IDEA
・武器による選択肢を持たせる。
・コンボによってしか破壊できないギミックを考える。
・後にならないと進めないレベルを設定する。
・パラメーターで難易度をを変えられる
・ギミック同士で組み合わせる

●虚人の素手攻撃で動かせるブロック
・レベルの移動
・智人のルート生成

●ジャンプパッドギミック
・特殊な挙動を発生させる
・行けない場所に行けるようにさせるギミック

●トリガーに接触すると柱が倒れて転がってくる
・ダメージを発生させるギミック
・トリガーギミック
・強制移動


[CityGenerator]
○CityGeneratorの修正
・現在の実装の挙動確認

○実装した建物Generatorをカードリッジ化する
・順番に実装しつつ検証していく
 -Asset
 -SurfaceMaker
 -VolumeMaker
・処理の流れ
 -Init
 -MakeVolume
 -MakeSurface
 -MakeDetail

○パラメーターをまとめて設定できるように実装する

○Typeの流動性を高める
 -for文で回してパラメーターに応じた処理を行うようにSwitchする

○他VolumeMakerもコンバートできるように設計する
※SoulCity, TokyoCity, OldCityをベースに必要なカードリッジを設計する
・SurfaceMakerを使いやすいように修正する
 ーBoxSurfaceMaker
 ーSimpleSurfaceMaker

■IDEA
●カードリッジ
 -オブジェクト配置情報
 -アセット情報
・最初のBasePointの値だけ直接設定させる
※カードリッジ側で反射的に操作したいパラメーターは直接設定できるようにする
 -Scale
 -Seed

●BasePoint生成ロジック
・SurfaceBaseのVolumeMakerを実装する
 -NoiseによるSurface内のBasePointの調整
 -奥行の設定

▲PM設計
・SurfaceBaseを生成してVolumeMakerに繋げる
・ObjにMaterialを設定する対応を実装する


■BLOG
Attributeについての説明
