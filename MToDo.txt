[Python]
○maya.cmdを用いたUI実装の予習

○ソース解析
https://github.com/ATI-Stud-Prod/generative-city

[USD]
○翌週に回すTutorialを調べ、予習しておく

[Modlieng]
○Line周りの設計

○配置周りの設計
・Noise
//=====================================================================================================



[Studied]
●CQE
Create フラグはコマンドの作成モードで表示できます	 
Quary フラグはコマンドの照会モードで表示できます
Edit フラグはコマンドの編集モードで表示できます

●コーディング規約
・モジュール宣言位置に気を付ける
・キャメルケース(hogehogePyear)
・ログを必ず表示する(mel.eval('print("ここに表示する")'))

●コーディング
・assemblies :　最上位レベルのトランスフォーム DAG オブジェクトがリスト
・long : フルパス名を返す('|group1|pCylinder1')
・list() : リストの編集
・\はコメント内にコメントをする際などに用いる
 -''の中に""を入れる


[TA準備]
○CoyoteLancher研修
https://www.vps.coyote-tec.com/63d23a88800581e6744a6971


[IZON.]
○TimeLine不具合調査
・AlongCurveが 1 / 2になってしまう原因を調査
・Timelineの最後が0になってしまう原因を調査


[USD]
○一度サンプルで挙動確認を行って挙動の流れを確認する

・USDの基礎
https://www.youtube.com/watch?v=4kMBwpdwkkw
https://qiita.com/ousttrue/items/b5f34e0f2441ca74467e
https://www.slideshare.net/slideshow/usd-79288174/79288174#2
https://fereria.github.io/reincarnation_tech/usd/what_is_usd

・USDの運用
https://fereria.github.io/reincarnation_tech/usd/python/tutorials/01
https://qiita.com/ousttrue/items/b5f34e0f2441ca74467e
https://qiita.com/takahito-tejima/items/ee0332bfb5c9baed3b09

・LOPS&Soraris
https://note.com/indyzonecorp/n/ndf9d8f82d7e5#93191dbb-a31d-4dbc-851a-584b7882528b
https://houdinifx.jp/blog/lops%E3%81%AE%E4%BB%95%E7%B5%84%E3%81%BF/

https://www.sidefx.com/tutorials/usd-authoring-with-solaris/
https://www.youtube.com/watch?v=SqTHglDeKtU


[ツール]
○資料の確認
https://3d.crdg.jp/tech/archives/218
https://3d.crdg.jp/tech/archives/382
https://3d.crdg.jp/tech/archives/4495
https://3d.crdg.jp/tech/archives/380
https://3d.crdg.jp/tech/archives/1938

■ツール実装
・undoで確認できる

○UIの実装
※Mayaの一般的なツールのレイアウトを参考にする
・実行ボタン

●仕様
・登録したオブジェクト以外を削除するツール
・ルートのみを対象とする


[CityGenerator]
※Houdini上で配置ロジックを完結させて検証まで行ってから、UEに落とし込む

○パラメーターの実装

○Houdini上で完結するように置き換える
・BOXで検証できるまでを実装する

○CurveBaseの生成ツールの設計及びメモ

○配置パターンの設計
・ノイズ

■Detail
※DetailAssetを配置していくのに必要な処理を実装しつつ、DTを用意していく

○Houdiniにおけるモデリングの学習
・モデリング、UV,マテリアルまでの一式を勉強する
・パラメーターを用いて調整できるように設計する


■パラメーター
●Box
 -Base
 -Pattern
 -Greeble
 -TopBottom
 -MakeLine
 
●Line
・PrimでBlockを分ける
 -MakeEdge
 -DivideHeight 
 -Greeble
 -Pattern


■IDEA
●InitParameterを用いた柔軟なPDの設計
 -Scale
 -Seed

●CurveBaseのPD

●ボロノイロジックを用いたModeling
