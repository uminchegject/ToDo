[Study]
※サンプルゲームのコードを積極的に参考にする

■ジャンプ周りの実装
○Actor::ProcessInputにジャンプ処理を追加する

○サンプルコードからの調査
 -Desent3
 -知っておきたい技術

○メモの作成

■環境整備
○dllの読み込みエラーの原因を調査
・Chapter1とChapter2の違いを調査

○PrivateでCMakeを用いてパッケージを開く
 
△UMLのセットアップ

■資料
・UML
https://orotiyamatano.hatenablog.com/entry/2022/12/15/UML#%E3%82%AF%E3%83%A9%E3%82%B9%E5%9B%B3%E3%81%AB%E3%81%AF%E3%81%84%E3%82%8D%E3%81%84%E3%82%8D%E7%A8%AE%E9%A1%9E%E3%81%8C%E3%81%82%E3%82%8B
https://qiita.com/ykawakami/items/f6688b845945669f0ce5

■ジャンプ処理

●メモ
void MoveComponent::Update(float deltaTime)
{
	
}

void MoveComponent::Jump()
{
	
}

●実装箇所
void FollowActor::ActorInput(const uint8_t* keys)
{
	float forwardSpeed = 0.0f;
	float angularSpeed = 0.0f;
	// wasd movement
	if (keys[SDL_SCANCODE_W])
	{
		forwardSpeed += 400.0f;
	}
	if (keys[SDL_SCANCODE_S])
	{
		forwardSpeed -= 400.0f;
	}
	if (keys[SDL_SCANCODE_A])
	{
		angularSpeed -= Math::Pi;
	}
	if (keys[SDL_SCANCODE_D])
	{
		angularSpeed += Math::Pi;
	}

	// Did we just start moving?
	if (!mMoving && !Math::NearZero(forwardSpeed))
	{
		mMoving = true;
		mMeshComp->PlayAnimation(GetGame()->GetAnimation("Assets/CatRunSprint.gpanim"), 1.25f);
	}
	// Or did we just stop moving?
	else if (mMoving && Math::NearZero(forwardSpeed))
	{
		mMoving = false;
		mMeshComp->PlayAnimation(GetGame()->GetAnimation("Assets/CatActionIdle.gpanim"));
	}
	mMoveComp->SetForwardSpeed(forwardSpeed);
	mMoveComp->SetAngularSpeed(angularSpeed);
}

void MoveComponent::Update(float deltaTime)
{
	if (!Math::NearZero(mAngularSpeed))
	{
		Quaternion rot = mOwner->GetRotation();
		float angle = mAngularSpeed * deltaTime;
		// Create quaternion for incremental rotation
		// (Rotate about up axis)
		Quaternion inc(Vector3::UnitZ, angle);
		// Concatenate old and new quaternion
		rot = Quaternion::Concatenate(rot, inc);
		mOwner->SetRotation(rot);
	}
	
	if (!Math::NearZero(mForwardSpeed) || !Math::NearZero(mStrafeSpeed))
	{
		Vector3 pos = mOwner->GetPosition();
		pos += mOwner->GetForward() * mForwardSpeed * deltaTime;
		pos += mOwner->GetRight() * mStrafeSpeed * deltaTime;
		mOwner->SetPosition(pos);
	}
}
