[Study]
●HoudiniForMaya
・Tutorial
https://support.borndigital.co.jp/hc/ja/articles/900000756146--%E5%88%9D%E5%BF%83%E8%80%85%E5%90%91%E3%81%91Houdini%E3%83%88%E3%83%A9%E3%82%A4%E3%82%A2%E3%83%AB005-Houdini-Engine-for-Maya%E3%81%A7Houdini-%E3%83%87%E3%82%B8%E3%82%BF%E3%83%AB%E3%82%A2%E3%82%BB%E3%83%83%E3%83%88%E3%82%92%E4%BD%BF%E7%94%A8%E3%81%99%E3%82%8B
・Debug
https://houdinifx.jp/blog/houdini-engine-for-maya-%E3%83%87%E3%83%90%E3%83%83%E3%82%B0%E3%81%AE%E4%BB%95%E6%96%B9/


[USD]
○一度サンプルで挙動確認を行って挙動の流れを確認する

・USDの基礎
https://www.youtube.com/watch?v=4kMBwpdwkkw
https://www.slideshare.net/slideshow/usd-79288174/79288174#2
https://fereria.github.io/reincarnation_tech/usd/what_is_usd

・USDの運用
https://fereria.github.io/reincarnation_tech/usd/python/tutorials/01
https://qiita.com/ousttrue/items/b5f34e0f2441ca74467e
https://qiita.com/takahito-tejima/items/ee0332bfb5c9baed3b09

・LOPS&Soraris
https://note.com/indyzonecorp/n/ndf9d8f82d7e5#93191dbb-a31d-4dbc-851a-584b7882528b
https://houdinifx.jp/blog/lops%E3%81%AE%E4%BB%95%E7%B5%84%E3%81%BF/

https://www.sidefx.com/tutorials/usd-authoring-with-solaris/
https://www.youtube.com/watch?v=SqTHglDeKtU

・Schemaについて調べる
 -階層をつける
 
・nvidiaビルドでPixarのサンプルコードを確認する
・usdCatで確認する

・動画の途中のサンプルを参考にする

・パイプラインの基礎的な部分を勉強する

・USDを使ってみる

[Python]
■ツール課題
○バインドポーズの調査
　ーリグについて調査

[IZON.]
■Gimmick_06
○ChibitoのAIを復旧する
○ExcuteEverytimeを正常に動くよう修正する
○Creation周りを修正する

■Gimmick_04
○防衛フェーズの実装方法を調査

○BP_Gimmick_tw04の実装
・60秒間起動フェーズを挟む
・BP_SpawnをSpawn
・エレベーターの起動

■Gimmick_11
○中牟田さんに、相談する
 -サンプルを実装して、それを見せて相談する


[ProceduralModeling]
※模様を生成することを意識する
 -※模様の形態に問わずDetail部分をModelingできる方法を考える
 -※BaseParameter(Scale, Rotate, Transform)を用いた模様生成を考える

■HardSurfaceModeling
○モデリングTutorialを調べる
・ハードサーフェスモデリングについて勉強する
 -各パーツのディテール部分で応用できない場所がないかを調査する
 -プロシージャルにサポートできる行程がないかを調べる
・検証しやすいパターンを考える


■BaseParameter
・Directionを設定
・Cofficient値
・ノード形式でパラメーターを管理しつつ、編集を行っていく
 -Extrude
 -Offset(Inside, OutSide)

○Scale
v@MinScale
v@MaxScale
・PrimのOriginPosとPrimPtsPosをベクトルにスケーリングする
 -Directionを係数にする

○Transform
v@MinTrans
v@MaxTrans
・Transを方向Matrixで回転させて移動する

○Rotate
v@MinRotate
v@MaxRotate
・軸を方向Matrixで回転させて、軸を基準に回転させる

○Extrude
v@MinExtrudeHeight
v@MaxExtrudeHeight

■Voronoi(Density)
○DensityベースでBaseParamterの検証

○Group化したPrimsの編集周りを研究

○Clusterの検証に繋げる

●PointPos
・Density
 -PosCofficientScale
 -DensityCofficientScale
 -DensityCofficientAdjustValue

●Base
・Rotate
 -Density
・Scale
 -Density
・Transform
 -Adjust

●Cluster
・フラクタル
 -ブロック化して処理をパターン化する
 -スケールコントラストに繋げる
・Layerを分けてPoint配置(数)とBaseParameterに変化を持たせる

●カラー設定
・Base, Main, Vividを意識する
 -グレースケール
 
▲境目のObj化



[ModularModelieng]
※明確なアセットセットを目標に都度新規実装を加えていく

■LineManager
・凹凸の検証
・DividePrimの検証

○Add, RemoveなどEdit以外の処理も追加する
・Offset
・

■IDEA
●InitParameterを用いた柔軟なPDの設計
 -Scale
 -Seed

●Noise周りの設計
・NoiseParameterの追加
 -AttributeにNoiseを持たせて
 
 -Boxサイズに偏りを持たせる
 -Typeに偏りを持たせる
