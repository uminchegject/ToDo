[ToDo]
●BaseAsset + BaseObj
・Blockサイズをパラメーターで設定
 -BaseAssetサイズを基準にする
 -Edgeサイズも考慮する
・縦横比率に一番近い分割値を求めるように修正
 -※Blockサイズとベース座標はあらかじめ決めておく
 -決められたParamIndexからBaseAssetのスケールを参照して分割値を設定する
・BaseAssetのスケールを埋めるように調整


※Volume内に組み込む
 -Scale周りの管理を厳格にする

・BaseObjMaterialParam
 -BlockType
 -Material

・BaseAssetParam
 -BlockType
 -EdgeAsset
 -NormalAsset
 -Scale


●ArcBase
・CityBlockを分割して生成する

○空間をつくるパラメーターを用意する
 -道
 -空間

○パラメーター
 -サイズ
 -高さ
 -オフセット値

○FrontDirection周りの実装
 -FrontDirectionをVolumeMakerに継承する



■AssetBlock
・BaseAssetとDetailAssetを分けて実装する

○フローの設計を修正
・3DVolumeの配置位置を計算
・BaseAssetの配置位置を計算
 -○BaseAssetを敷き詰めて配置できるようにサイズを修正
 -○角のBaseAssetを配置する
・DetailAssetの配置位置を計算

●3DObj
・パラメーター
 -Material
 -ParamIndex
 
●BaseAsset
・パラメーター
 -BlockType
 -AssetType
 -Transform
 -Rotate
 -Scale
 -ChildBlockScale
 -VolumeScale
 -AddBlock


■ArcBase
・CityBlockを分割して生成する

○空間をつくるパラメーターを用意する
 -道
 -空間

○パラメーター
 -サイズ
 -高さ
 -オフセット値

○FrontDirection周りの修正
 -FrontDirectionをVolumeMakerに継承する

■Raad
※道幅、高さ、街区の大きさを意識して設計する
・道をベースにしたパラメーターを用意する

○パラメーター
 -幅
 -量(比率)

■AddObj
・PMを実装する
 -PMの子にアセットパラメーターをつける
 

[C++]
■実装
○3D行列への変換を実装する

○矩形を生成できるように実装する

■設計
※線と面をベースとした生成、アニメーションロジックを実装する
※Objを線、面、で好きに構成して表示するように実装する
・色
ColorManager
 -背景、オブジェクト
 -メイン、ビビッド
 -グラデーション
・線
LineManager
 -
・面
SurfaceManager
 -

○オブジェクトごとにクラスを用意して線、面、色に関するメンバを整理する

[UE4]
○設計の勉強
