[Maya]
■ProceduralModeling
※MayaのモデリングとMELのスクリプトでプロシージャルモデリングを実装する

○できることを把握する
・PDにつなげられるモデリングテーマを決める

○メモにまとめる


●MEL(Python)
・本のチュートリアルを回す
 -基礎部分とモデリング部分をベースに勉強する
・Greeble
・CopyToPoint
・UI(Input)

△柔軟なUV展開、マテリアル

●DCC
・モジュールを簡単にモデリングする
・チュートリアルを用意


[CityGenerator]
○BuildGeneratorを完成させる
・EdgeMakeの検証
・Greebleの検証
・Greebleを活かした生成を実装する

○BlockGeneratorの設計
・InitParameterの設計
 -Scale
 -Seed
・Parameterの設計
 -PlaceLogic
 -BuildScale
 -AdjustHeight

○Boxで検証


■IDEA
●実装の流れ
・順番に実装しつつ検証していく
 -Asset
 -SurfaceMaker
 -VolumeMaker
 
・処理の流れ
 -Init
 -MakeVolume
 -MakeSurface
 -MakeDetail

●ModuleParameterを繰り返し使う設計で作品を作る
 -Pattern
 -Greeble
 -Scale
 -Block
 
●InitParameterを用いた柔軟なPDの設計
 -Scale
 -Seed

●カードリッジ
 -オブジェクト配置情報
 -アセット情報
・最初のBasePointの値だけ直接設定させる
※カードリッジ側で反射的に操作したいパラメーターは直接設定できるようにする
 -Scale
 -Seed

●BasePoint生成ロジック
・SurfaceBaseのVolumeMakerを実装する
 -NoiseによるSurface内のBasePointの調整
 -奥行の設定

▲PM設計
・SurfaceBaseを生成してVolumeMakerに繋げる
・ObjにMaterialを設定する対応を実装する


[IZON.]
○検証レベルを実装
●BP_GimmickTrigger_tw06_start
※ThibitoとBP_Spawnの管理を行う
・BP_Spawn
 -接触したらBP_Spawnを生成する
 -再度Thibitoと接触したら消滅する
・Thibito
 -ThibitoをGoalに向かわせる
 -Goalのイベントに戻ってくる処理をバインドする

△tw_05の検証
・クォータニオンを用いて実装
・アクターの方向に対して正常な挙動を行うように修正
https://dokuro.moe/ue4-cpp-super-simple-rotate-round-any-object/
