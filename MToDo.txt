[反省]
※サンプルプロジェクトの定期的な勉強
・日中から夜にかけて、サンプルプロジェクトを探して中を軽く確認する
・サンプルプロジェクトに不随して情報サイトを確認する
・朝一でサンプルプロジェクトと不随情報を確認する

※朝活をしっかり行う
・techブログ
・サンプルプロジェクトの確認
・情報収集

※午後の作業を明確に2つに分ける


[業務]
■Study + 調査
○智人の待機、追従モードの切替箇所を調査

■拡張実装
○Gimmickクラスの設計を提案
・クラスの説明
・それぞれギミックの根本部分の整理

○智人AIの実装

△智人の追従モードと徘徊モードの実装
・徘徊モードの仕様設計と実装方法の整理

■基礎実装
※ギミックの根本の部分を整理して、共通した意図・仕様のギミックを複数用意

○基底クラスの実装
まず、BP_StaticObjGimmickを実装する

○トリガーに接触すると柱が倒れて転がってくる
 -移動周りの実装
 -ガード及び破壊の実装 
 -トリガーに接触すると柱が倒れてくる
 -倒れた柱はプレイヤーのほうに転がる（坂道を転がる）
 -倒れるときにエフェクト、効果音、カメラが振動が発生する
 -転がってくるスピードを調整できる
 -ヒットしてしまった場合は分離+ダメージを受ける
 -ガードもしくは攻撃で破壊できる


■基底クラス
・GimmickEventを用意して呼び出す
 -GimmickEventをOverRideして処理を呼び出す
 -EventExecuteDestroyObjectからGimmickEventを呼び出す
・サウンド、エフェクト、カメラ振動を関数化
・アニメーションイベントの継承
 -動きなども制御できるようにさせる
・ダメージを入れる

●BP_DestoryObjGimmick
BP_DestroyObj_Baseを継承
・破壊条件を設定する

●BP_StaticObjGimmick
BP_Destroy_Baseを継承


■IDEA
・武器による選択肢を持たせる。
・コンボによってしか破壊できないギミックを考える。
・後にならないと進めないレベルを設定する。
・パラメーターで難易度をを変えられる
・ギミック同士で組み合わせる


●虚人の素手攻撃で動かせるブロック
・レベルの移動
・智人のルート生成

●ジャンプパッドギミック
・特殊な挙動を発生させる
・行けない場所に行けるようにさせるギミック

●トリガーに接触すると柱が倒れて転がってくる
・ダメージを発生させるギミック
・トリガーギミック
・強制移動


[CityGenerator]
○CityGeneratorの修正
・現在の実装の挙動確認

○実装した建物Generatorをカードリッジ化する
・順番に実装しつつ検証していく
 -Asset
 -SurfaceMaker
 -VolumeMaker
・処理の流れ
 -Init
 -MakeVolume
 -MakeSurface
 -MakeDetail

○Typeの流動性を高める
 -for文で回してパラメーターに応じた処理を行うようにSwitchする
 -

○他VolumeMakerもコンバートできるように設計する
※SoulCity, TokyoCity, OldCityをベースに必要なカードリッジを設計する
・SurfaceMakerを使いやすいように修正する
 ーBoxSurfaceMaker
 ーSimpleSurfaceMaker

■IDEA
●カードリッジ
 -オブジェクト配置情報
 -アセット情報
・最初のBasePointの値だけ直接設定させる
※カードリッジ側で反射的に操作したいパラメーターは直接設定できるようにする
 -Scale
 -Seed

●BasePoint生成ロジック
・SurfaceBaseのVolumeMakerを実装する
 -NoiseによるSurface内のBasePointの調整
 -奥行の設定

▲PM設計
・SurfaceBaseを生成してVolumeMakerに繋げる
・ObjにMaterialを設定する対応を実装する


■BLOG
Attributeについての説明
