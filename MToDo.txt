※TAはアーティストをサポートする仕組みを軸に考える
※PGは設計を軸に考える
※TAのツール周りの基礎的な部分を勉強する

[Portfolio]
○参考書類を調べる


[IZON.]
○検証レベルを実装
・EventTrigger_AutoCreationStartを参考に実装する

○tw_05の検証
・クォータニオンを用いて実装
・アクターの方向に対して正常な挙動を行うように修正
https://dokuro.moe/ue4-cpp-super-simple-rotate-round-any-object/


[CityGenerator]
■TokyoCity
○4面生成ノードを作成する

○サイズ管理を行えるように設計する
・

●建物部分をHDAに置き換える



■Unreal
※説明すべき箇所を整理して、その説明を具体例にできるようにPDを行う
 -家のオブジェクトを生成して配置していく流れを実装する
※汎用的に使えるように実装する

○既存のアセットで資料画像を用意する
・DataTable
 -TokyoCityの既存ビルのベースにDetailAsset(複数種類)を配置する
 
・規則性と不規則性
 -TokyoCityの既存ビル(複数種類)のベースに規則的に並べる
 
 -Greebleを用いてBlockを分割する
 -RemainRatioでランダムに配置する 

●実装の流れ
・順番に実装しつつ検証していく
 -Asset
 -SurfaceMaker
 -VolumeMaker
・処理の流れ
 -Init
 -MakeVolume
 -MakeSurface
 -MakeDetail


■IDEA
●ModuleParameterを繰り返し使う設計で作品を作る
 -Pattern
 -Greeble
 -Scale
 -Block
 
●InitParameterを用いた柔軟なPDの設計
 -Scale
 -Seed

●カードリッジ
 -オブジェクト配置情報
 -アセット情報
・最初のBasePointの値だけ直接設定させる
※カードリッジ側で反射的に操作したいパラメーターは直接設定できるようにする
 -Scale
 -Seed

●BasePoint生成ロジック
・SurfaceBaseのVolumeMakerを実装する
 -NoiseによるSurface内のBasePointの調整
 -奥行の設定

▲PM設計
・SurfaceBaseを生成してVolumeMakerに繋げる
・ObjにMaterialを設定する対応を実装する
