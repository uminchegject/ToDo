[ToDo]
・層にする
 ー奥の層ほど、GreebleBlockを細長くする
・穴をあける
 ー奥の層ほど、GreebleBlockの消す範囲を小さくする

[実装]
int points[] =  primpoints(0, @primnum);
int pt1num = points[0];
int pt2num = points[1];
int pt3num = points[2];
int pt4num = points[3];

vector pt1pos = point(0, "P" , pt1num);
vector pt2pos = point(0, "P" , pt2num);
vector pt3pos = point(0, "P" , pt3num);
vector pt4pos = point(0, "P" , pt4num);

float width = length(pt2pos - pt1pos);
float moveLength = width * (1 - @ResizeValue) / 2;
vector moveVector = normalize(pt2pos - pt1pos) * moveLength;

float height = length(pt3pos - pt2pos) * (random(@P) * 0.5);
moveLength = height / 2;
moveVector -= normalize(pt3pos - pt2pos) * moveLength;

if(-0.1 < moveVector.y && moveVector.y < 0.1)
{
    setpointattrib(geoself(), "P", pt1num, pt1pos + moveVector * moveLength);
    setpointattrib(geoself(), "P", pt2num, pt2pos - moveVector * moveLength);
    setpointattrib(geoself(), "P", pt3num, pt3pos - moveVector * moveLength);
    setpointattrib(geoself(), "P", pt4num, pt4pos + moveVector * moveLength);
}
else
{
        width = length(pt2pos - pt3pos);
        moveLength = width * (1 - @ResizeValue) / 2;
        moveVector = normalize(pt3pos - pt2pos);
        
        height = length(pt2pos - pt1pos) * (random(@P) * 0.5);
        moveLength = height / 2;
        moveVector -= normalize(pt2pos - pt1pos) * moveLength;
        
        setpointattrib(geoself(), "P", pt1num, pt1pos + moveVector * moveLength);
        setpointattrib(geoself(), "P", pt2num, pt2pos + moveVector * moveLength);
        setpointattrib(geoself(), "P", pt3num, pt3pos - moveVector * moveLength);
        setpointattrib(geoself(), "P", pt4num, pt4pos - moveVector * moveLength);       
}
