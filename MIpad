node = hou.pwd()
geo = node.geometry()
from random import randint, uniform, random

# Add code to modify contents of geo.
# Use drop down menu to select examples.

#=================================================================
#パラメーター
offsetCofficient = node.parm("OffsetCofficient").eval()
minSlideCofficient = node.parm("MinSlideCofficient").eval()
maxSlideCofficient = node.parm("MaxSlideCofficient").eval()
#=================================================================

#L字パイプのBaseLineを生成する
def SetGLLineVertexList(point):
                
    blockSize = (point.attribValue("SizeX"), point.attribValue("SizeY"))
    blockBasePos = point.position()
    tubeNum = point.attribValue("TubeNum")
    radius = point.attribValue("Radius")
    height = point.attribValue("Height")
        
    basePos_x = -blockSize[0] / 2
    basePos_y = -blockSize[1] / 2   
    
    size_x = blockSize[0]
    size_y = blockSize[1]
    if size_x > size_y:
        middlePosSubSlideLength = (size_y * (0.5 - offsetCofficient)) * uniform(minSlideCofficient, maxSlideCofficient)
    else:
        middlePosSubSlideLength = (size_x * (0.5 - offsetCofficient)) * uniform(minSlideCofficient, maxSlideCofficient)
        
    for num in range(tubeNum):

        if size_x > size_y:
      
            startPos = (basePos_x + offsetCofficient * size_x, 0, basePos_y + (num + 0.5) * radius)
            goalPos = (basePos_x + (1 - offsetCofficient) * size_x, 0, basePos_y + size_y - (tubeNum - num - 0.5) * radius)
            middlePos1 = (startPos[0], height, startPos[2])
            middlePos2 = (goalPos[0], height, goalPos[2])

            middlePosSlideLength = size_x / 2 + ((tubeNum - 1) / 2 - num) * radius
            centerPos1 = (startPos[0] + middlePosSlideLength - middlePosSubSlideLength, height, startPos[2])
            centerPos2 = (startPos[0] + middlePosSlideLength - middlePosSubSlideLength, height, goalPos[2])

            lineVertexList = [startPos, middlePos1, centerPos1, centerPos2, middlePos2, goalPos]
            MakeLine(lineVertexList)
    
        else:        
        
            startPos = (basePos_x + (num + 0.5) * radius, 0, basePos_y + offsetCofficient * size_y)
            goalPos = (basePos_x + size_y - (tubeNum - num - 0.5) * radius, 0, basePos_y + (1 - offsetCofficient) * size_y)
            middlePos1 =(startPos[0], height, startPos[2])
            middlePos2 = (goalPos[0], height, goalPos[2])
                        
            middlePosSlideLength = size_y / 2 + ((tubeNum - 1) / 2 - num) * radius
            centerPos1 = (startPos[0], height, startPos[2] + middlePosSlideLength - middlePosSubSlideLength)
            centerPos2 = (goalPos[0], height, startPos[2] + middlePosSlideLength - middlePosSubSlideLength)                
                        
            lineVertexList = [startPos, middlePos1, centerPos1, centerPos2, middlePos2, goalPos]
            MakeLine(lineVertexList)

#ストレートパイプのBaseLineを生成する
def SetStreetLineVertexList(point):
                
    blockSize = (point.attribValue("SizeX"), point.attribValue("SizeY"))
    blockBasePos = point.position()
    tubeNum = point.attribValue("TubeNum")
    radius = point.attribValue("Radius")
    height = point.attribValue("Height")
        
    basePos_x = -blockSize[0] / 2
    basePos_y = -blockSize[1] / 2   
    
    size_x = blockSize[0]
    size_y = blockSize[1]
    
    middlePosSubSlideLength = (size_x / 2 - ((tubeNum - 1) / 2) * radius) * uniform(minSlideCofficient, maxSlideCofficient)
        
    for num in range(tubeNum):        
        if size_x > size_y:
                
            startPos = (basePos_x, height, basePos_y + (num + 0.5) * radius)
            goalPos = (basePos_x + size_x, height, basePos_y + size_y - (tubeNum - num - 0.5) * radius)

            middlePosSlideLength = size_x / 2 + ((tubeNum - 1) / 2 - num) * radius
            centerPos1 = (startPos[0] + middlePosSlideLength - middlePosSubSlideLength, height, startPos[2])
            centerPos2 = (startPos[0] + middlePosSlideLength - middlePosSubSlideLength, height, goalPos[2])
        
            lineVertexList = [startPos, centerPos1, centerPos2, goalPos]
            MakeLine(lineVertexList)        
    
        else:
                
            startPos = (basePos_x + (num + 0.5) * radius, height, basePos_y)
            goalPos = (basePos_x + size_x - (tubeNum - num - 0.5) * radius, height, basePos_y + size_y)
                        
            middlePosSlideLength = size_x / 2 + ((tubeNum - 1) / 2 - num) * radius
            centerPos1 = (startPos[0], height, startPos[2] + middlePosSlideLength - middlePosSubSlideLength)
            centerPos2 = (goalPos[0], height, startPos[2] + middlePosSlideLength - middlePosSubSlideLength)                         
                
            lineVertexList = [startPos, centerPos1, centerPos2, goalPos]
            MakeLine(lineVertexList)

#ベースラインを作成
def MakeLine(VertexPosList):
    poly = geo.createPolygon(is_closed = False)   
    for position in VertexPosList:
        point = geo.createPoint()
        point.setPosition(position)
        poly.addVertex(point)            

        
#=================================================================
#main
points = geo.points()

for point in points:    

    if 0 < point.attribValue("IsSetGL"):
        SetGLLineVertexList(point)
    else:
        SetStreetLineVertexList(point)
        
        
        
        
