[ToDo]
・層にする
 ー奥の層ほど、GreebleBlockを細長くする
・穴をあける
 ー奥の層ほど、GreebleBlockの消す範囲を小さくする

[実装]
int points[] =  primpoints(0, @primnum);
int pt1num = points[0];
int pt2num = points[1];
int pt3num = points[2];
int pt4num = points[3];

vector pt1pos = point(0, "P" , pt1num);
vector pt2pos = point(0, "P" , pt2num);
vector pt3pos = point(0, "P" , pt3num);
vector pt4pos = point(0, "P" , pt4num);

float width = length(pt2pos - pt1pos);
float moveWidthLength = width * (1 - @ResizeValue) / 2;
vector moveWidthVector = normalize(pt2pos - pt1pos) * moveWidthLength;

float height = length(pt3pos - pt2pos) * (random(@P) * 0.5);
float moveHeightLength = height / 2;
float moveHeightVector = normalize(pt3pos - pt2pos) * moveHeightLength;

if(-0.1 < moveVector.y && moveVector.y < 0.1)
{
    setpointattrib(geoself(), "P", pt1num, moveWidthVector + moveHeightVector);
    setpointattrib(geoself(), "P", pt2num, moveWidthVector + moveHeightVector);
    setpointattrib(geoself(), "P", pt3num, moveWidthVector + moveHeightVector);
    setpointattrib(geoself(), "P", pt4num, moveWidthVector + moveHeightVector);
}
else
{
	width = length(pt2pos - pt3pos);
	moveWidthLength = width * (1 - @ResizeValue) / 2;
	moveWidthVector = normalize(pt3pos - pt2pos) * moveWidthLength;
	
	height = length(pt2pos - pt1pos) * (random(@P) * 0.5);
	moveHeightLength = height / 2;
	moveHeightVector = normalize(pt2pos - pt1pos) * moveHeightLength;
	
	setpointattrib(geoself(), "P", pt1num, moveWidthVector + moveHeightVector));
	setpointattrib(geoself(), "P", pt2num, moveWidthVector + moveHeightVector));
	setpointattrib(geoself(), "P", pt3num, moveWidthVector + moveHeightVector));
	setpointattrib(geoself(), "P", pt4num, moveWidthVector + moveHeightVector));       
}
