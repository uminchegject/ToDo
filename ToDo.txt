[Public]
○次のWidgetを取得する関数を実装
//スクロールボックス内の選択しているインデックスから次に選択するアイテムWidgetを取得する
TSharedPtr<SWidget> FSBGameCursor::GetNextSWidgetInScrollBox(FSlateApplication& SlateApp,const FVector2D Direction, SScrollBox* Scrollbox)
{
	if (!ScrollBox) return nullptr;
	
	TArray<TSharedPtr<SWidget>> AllItems = Scrollbox->GetAllScrollBoxItems();
	
	TArray<FSBSearchWidgetResult> SearchScrollBoxWidgets;
	for(TSharedPtr<SWidget> Item : AllItems)
	{
		FVector2D ItemPos = FSBGameCursorHelper::GetWidgetCenterPos(*AllItems[i].Get());
		SearchScrollBoxWidgets.Add(FSBSearchWidgetResult(*Item, ItemPos));
	}
	
	FSBSearchWidgetResult result = SelectNextCusorWidget(SlateApp, Direction, SearchWidgets);
	
	return 
}

struct FSBSearchWidgetResult
{
public:

	TSharedRef<SWidget> Widget;

	FVector2D HitLocation { EForceInit::ForceInitToZero };

	int32 HitCheckFlag;	// このボタンが遮蔽されてないかのフラグ。0未チェック、-1遮蔽、1インタラクト可能

public:
	FSBSearchWidgetResult() = default;

	FSBSearchWidgetResult(TSharedRef<SWidget> InWidget, const FVector2D& InHitLocation)
		: Widget(InWidget)
		, HitLocation(InHitLocation)
		, HitCheckFlag(0)
	{
	}
};

[Study]
TOptionalについて調査

[PD]
○Blockの適正サイズのAsset値を取得する
・Block数をsplitしたarrayから調べてindexをランダムに決める
-Structに目印をつける

・attribute
@unreal_data_table_3_SingleAssetParameters

・ソース
//AssetParamごとに分割
string AssetParamStrArray[] = split(s@unreal_data_table_3_SingleAssetParameters, "/");
int AssetParamNum = len(AssetParamStrArray) - 1;
for(int i = 0; i < AssetParamNum; ++i)
{
	string AssetParamStr = AssetParamStrArray[i];	
}

//AssetPathをランダムに取得
string AssetPathStrArray[] = split
int AssetPathStrNum = 
string AssetPathStr = AssetParamStrArray[int(AssetParamStrNum * random())];
