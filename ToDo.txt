[反省]
※サンプルの勉強方法
 -コードの調査
 -新しい機能の設計


[Public]
■【CS共通】レイドバトル・防衛戦開始時にメンバー名の表記が「…」となり、クラスアイコンもブラストアーチャーとなってしまう


■入力マッピング対応
○参考資料の確認
 -必要な項目をメモする
○引継ぎ資料のメモを作成する


[Study]
■Game
※"ゲームプログラミングC++"をベースに勉強する

○設計
※ギャラクシーの設計を考えていく
・各章ごとに勉強しつつ設計を考えていく
・設計をクラス図、シークエンス図に落とし込む

○環境準備
・Soundの問題を解決する

●資料
・UML
https://orotiyamatano.hatenablog.com/entry/2022/12/15/UML#%E3%82%AF%E3%83%A9%E3%82%B9%E5%9B%B3%E3%81%AB%E3%81%AF%E3%81%84%E3%82%8D%E3%81%84%E3%82%8D%E7%A8%AE%E9%A1%9E%E3%81%8C%E3%81%82%E3%82%8B
https://qiita.com/ykawakami/items/f6688b845945669f0ce5

■Employ
○どう働きたいかを具体的にまとめる
大学時代の研究を通じてプロシージャルデザインとプログラミングを勉強する
アカデミーと実務でUE4とCPPの経験を積む
上記の経験を活かして、現在プライベートではHoudiniとUE4を用いた背景の自動生成プロジェクトの開発を行ってきた。
UE4で培ったエンジニアとしての技術と、建築学生時代と個人で勉強していたプロシージャルデザインの技術を活かして、
モデリングの業務効率化などを

○コミュニケーション力もアピールする

・経歴書の修正のメモ
・履歴書のメモ
・ポートフォリオのメモ

●資料
https://ss-agent.jp/column/knowhow/tpl_cv/
https://masa-ka.net/pascase/sepg-blog/programer-syokumukeirekisyo.php


[SoulCity]
■ToDo
○配置ロジックの修正
・ブロックサイズに近いスケールへの調整処理を実装
・位置調整処理の修正
 -法線に対して移動するように実装する

○SingleSurfaceで検証
・PatternBlock
・GreebleBlock

○各BlockのアセットDTの設定
・アセットを調査する
 -Modular Gothic/Fantasy Environment(Randmark)
 -SoulCity(Randmark + Normal)

■IDEA
※DTのAssetを変更するだけで成立するように実装する
※Scale,Typeにコントラストをつける
