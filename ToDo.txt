■[Public]
○挙動確認
 -ミッション・レイドミッション
 -クラフト
 -エステ
 
●Widgetの実装
※通常のテキストDTも必要かを確認する

・検証
const static FSBTextTableHash cCanNotGoOnNowTextTableHash(0);
const FString Msg = USBUIBlueprintFunctionLibrary::GetText("SystemMessage", cCanNotGoOnNowTextTableHash);
const FText MsgText = FText::FromString(Msg);
USBEventSceneBPFunctionLibrary::ShowMessageDialogNoWait(this, MsgText);

○GetAssetsを用いてDTを取得する処理を実装
 -Editorで検証

・仮Widget 
const FString Msg = TEXT("ログダヨー");
const FText MsgText = FText::FromString(Msg);
USBEventSceneBPFunctionLibrary::ShowMessageDialogNoWait(this, MsgText);

●フィールド(フィールド移動制限)
○Widgetで実装

●フィールド(マップ移動制限)
○アクセス制限確認処理を実装

○BP側でダイアログを実装


●フィールド(アステルリーズに強制遷移)
○サーバー側の処理を確認
 -解決次第挙動を確認。
 
○ログを確認

○Widgetを表示
USBGameInstance::InternalPlayerCharacterFailedWarpを参考に実装

▲チャット
結論：
チャットのアクセス制限については、チャットサーバー側での対応のため、クライアントでの対応はなし
https://skyblue-workspace.slack.com/archives/C055V04J96C/p1693898747127919?thread_ts=1686021192.063809&cid=C055V04J96C



■[Study]
●Read
○https://xn--97-273ae6a4irb6e2hsoiozc2g4b8082p.com/
○背景モデリング
○独習(文章のみを確認(Read)+サンプルコードを確認(Cording))

●Cording
○独習(朝一でkindleでサンプルコードを確認する)
○シェーダーの魔導書

■[SoulCity]
[ToDo]
※質問事項具体的にまとめる(YorN)

●格子の実装
・格子のデザインを設計
・スライドアニメーションの実装

▲SignBoard+Panelの検証
・Panelの手前のGreebleMaterialを密度中間のものを重ねる
 -SignBoardよりも前に濃い色で配置する
 -SignBoardを参考
・レイヤーの順番を修正


[Study]
○マテリアル周り
○ビルのFacadeのモデリング方法


[IDEA]
※全てのパーツに共通する、PDロジックを考える

●BaseProceduralDesign(Volume)
・Random
 -Greeble
 -コントラスト(サイズ)
 -段差
・Pattern
 -Noise(面積比)
 -縦に長いサイズ

●SignBoard
※スケールの大きいアセットを配置する
・SignBoardを構成要素の一つとする
・アセットを用意

●Residence
※アセットを配置するPDを考える
※模様のPDを考える
※ラインを入れる
