vector baseVector = (1.0, 1.0, 1.0);
vector blockPosList[];
vector blockScaleList[];
blockScaleList[0] = baseVector;
blockPosList[0] = baseVector;

for(int paramIndex = 0; paramIndex < point(0, "ParamNum", 0); paramIndex++)
{
    vector divideAxis = point(0, "DivideAxis", paramIndex);
    vector divideRange = point(0, "DivideRange", paramIndex);
    
    int blockNum = len(blockPosList);
    for(int i = 0; i < blockNum; i++)
    {
        vector blockPosOrigin = removeindex(blockPosList, 0);
        vector blockScaleOrigin = removeindex(blockScaleList, 0);
        
        float block1ScaleValue = random(blockPosOrigin * (i + 1)) * (divideRange.y - divideRange.x) + divideRange.x;   
        float block2ScaleValue = 1 - block1ScaleValue;
        vector block1Scale = blockScaleOrigin * (baseVector - divideAxis * block1ScaleValue);
        vector block2Scale = blockScaleOrigin * (baseVector - divideAxis * block2ScaleValue);
        vector block1Pos = blockPosOrigin - divideAxis * (block1Scale / 2 + blockScaleOrigin / 2 - block1Scale);
        vector block2Pos = blockPosOrigin + divideAxis * (block2Scale / 2 + blockScaleOrigin / 2 - block2Scale);
        push(blockPosList, block1Pos);
        push(blockPosList, block2Pos);
        push(blockScaleList, block1Scale);
        push(blockScaleList, block2Scale);                      
    }   
}

for(int i = 0; i < len(blockPosList); i++)
{
    vector spawnPos = blockPosList[i];
    int ptnum = addpoint(0, spawnPos);
    vector scale = blockScaleList[i];
    scale *= 0.8;
    setpointattrib(0, "scale", ptnum, scale);
}
