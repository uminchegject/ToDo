[CityGenerator]
■TokyoCity
○TokyoCityの建物を生成するロジックを実装
・フロー
 -0_SignBoard_Make(100, 2000)
 -100_Base_Edge(110, 120)
 -110_Base_Pattern(111)
 -120_Base_Edge(121)
 -110_Detail_Pattern(112)
 -2000_SignBoard_Divide(2100, 2200)
 -2100_SignBoardBase_Pattern(2110)
 -2100_SignBoardTextBase_Scale(2120)
 -2120_SignBoardText_Pattern(2130)
 -2200_SignBoardLegs
 
○EdgeMakerからAddTypeNumを消す


○EdgeMakerをBaseサイズに合うように生成するよう修正
spawnPos.x += v@scale.x / 2 - depthSize / 2;

vector spawnPos = 0;
spawnPos.x += v@scale.x / 2 - depthSize / 2;
spawnPos.z += v@scale.z / 2 - depthSize / 2;

○EdgeMakerのEdgeSizeが0だった場合にサイズを調整する
if(0 < sideEdgeSize)
{

}

●実装の流れ
・順番に実装しつつ検証していく
 -Asset
 -SurfaceMaker
 -VolumeMaker
 
・処理の流れ
 -Init
 -MakeVolume
 -MakeSurface
 -MakeDetail


■IDEA
●ModuleParameterを繰り返し使う設計で作品を作る
 -Pattern
 -Greeble
 -Scale
 -Block
 
●InitParameterを用いた柔軟なPDの設計
 -Scale
 -Seed

●カードリッジ
 -オブジェクト配置情報
 -アセット情報
・最初のBasePointの値だけ直接設定させる
※カードリッジ側で反射的に操作したいパラメーターは直接設定できるようにする
 -Scale
 -Seed

●BasePoint生成ロジック
・SurfaceBaseのVolumeMakerを実装する
 -NoiseによるSurface内のBasePointの調整
 -奥行の設定

▲PM設計
・SurfaceBaseを生成してVolumeMakerに繋げる
・ObjにMaterialを設定する対応を実装する
